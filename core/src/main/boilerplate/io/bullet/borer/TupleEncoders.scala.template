/*
 * Copyright (c) 2019 Mathias Doenitz
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

package io.bullet.borer

abstract class TupleEncoders {

  implicit def forTuple1[T1 :Encoder]: Encoder[Tuple1[T1]] =
    Encoder((w, x) ⇒ w ~ x._1)

  [2..#implicit def forTuple1[[#T1 :Encoder#]]: Encoder[([#T1#])] =
    Encoder((w, x) ⇒ close(open(w, 1), w ~ [#x._1# ~ ]))#

  ]

  private def open(w: Writer, arity: Int): Boolean =
    if (w.target eq Json) {
      w.writeArrayStart()
      true
    } else {
      w.writeArrayHeader(arity)
      false
    }

  private def close(unbounded: Boolean, w: Writer): w.type =
    if (unbounded) w.writeBreak() else w
}
