/*
 * Copyright (c) 2019 Mathias Doenitz
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

package io.bullet.borer.core

abstract class TupleDecoders extends DecoderFromApply {

  implicit def forTuple1[Bytes, P1](implicit d1: Decoder[Bytes, P1]): Decoder[Bytes, Tuple1[P1]] =
    Decoder(r ⇒ Tuple1(r[P1]))

  [2..#implicit def forTuple1[[#B1#], [#P1#]](implicit [#d1: Decoder[B1, P1]#]): Decoder[[#B1# with ], ([#P1#])] =
    Decoder(r ⇒ close(r, open(r, 1), ([#r[P1]#])))#

  ]

  private def open[Bytes, T](r: Reader[Bytes], arity: Int): Boolean =
    r.tryReadArrayHeader(arity) || { r.readArrayStart(); false }

  private def close[Bytes, T](r: Reader[Bytes], bounded: Boolean, tuple: T): T = {
    if (!bounded) r.readBreak()
    tuple
  }
}
